{"version":3,"sources":["../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/slim/slim.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","wordObj","words","o","i","e","length","keywordList","keywords","indentWords","dedentWords","opening","closing","defineMode","config","curPunc","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","m","ch","next","readQuoted","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","backUp","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","registerHelper","mod","require","htmlMode","getMode","name","rubyMode","modes","html","ruby","embedded","javascript","css","sass","scss","less","styl","coffee","asciidoc","markdown","textile","creole","wiki","mediawiki","rdoc","builder","nokogiri","erb","embeddedRegexp","map","arr","key","RegExp","join","styleMap","nameStartChar","nameChar","nameRegexp","attributeNameRegexp","wrappedAttributeNameRegexp","classNameRegexp","classIdRegexp","backup","restore","maybeBackup","pat","offset","cur","idx","search","continueLine","stack","parent","line","finishContinue","lineContinuable","commaContinuable","rubyInQuote","endQuote","rubyState","startRubySplat","runSplat","htmlLine","htmlState","startHtmlLine","lastTokenize","startHtmlMode","comment","commentMode","attributeWrapper","attributeWrapperAssign","attributeWrapperValue","startAttributeWrapperMode","sub","subStream","StringStream","string","slice","tabSize","lastColumnPos","lastColumnValue","subMode","subState","firstSub","createMode","mode","query","spec","mimeModes","factory","hasOwnProperty","startSubMode","doctypeLine","_state","startLine","slimTag","slim","startOfLine","slimTagExtras","slimClass","slimAttribute","$1","slimAttributeAssign","slimContent","slimAttributeValue","slimAttributeSymbols","nextTokenize","fresh","last","copyState","blankLine","innerMode","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","inTag","baseState","tagName","tagStart","inAttribute","stringStartCol","closure","isInAttribute","terminator","Context","this","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","defaultTags","script","attrRegexpCache","getAttrRegexp","attr","regexp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","findMatchingMode","tagInfo","tagText","parserConfig","tags","configTags","configScript","scriptTypes","matches","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local"],"mappings":"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","file":"static/js/15.edd57aff.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Slim Highlighting for CodeMirror copyright (c) HicknHack Software Gmbh\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  CodeMirror.defineMode(\"slim\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n    var modes = { html: htmlMode, ruby: rubyMode };\n    var embedded = {\n      ruby: \"ruby\",\n      javascript: \"javascript\",\n      css: \"text/css\",\n      sass: \"text/x-sass\",\n      scss: \"text/x-scss\",\n      less: \"text/x-less\",\n      styl: \"text/x-styl\", // no highlighting so far\n      coffee: \"coffeescript\",\n      asciidoc: \"text/x-asciidoc\",\n      markdown: \"text/x-markdown\",\n      textile: \"text/x-textile\", // no highlighting so far\n      creole: \"text/x-creole\", // no highlighting so far\n      wiki: \"text/x-wiki\", // no highlighting so far\n      mediawiki: \"text/x-mediawiki\", // no highlighting so far\n      rdoc: \"text/x-rdoc\", // no highlighting so far\n      builder: \"text/x-builder\", // no highlighting so far\n      nokogiri: \"text/x-nokogiri\", // no highlighting so far\n      erb: \"application/x-erb\"\n    };\n    var embeddedRegexp = function(map){\n      var arr = [];\n      for(var key in map) arr.push(key);\n      return new RegExp(\"^(\"+arr.join('|')+\"):\");\n    }(embedded);\n\n    var styleMap = {\n      \"commentLine\": \"comment\",\n      \"slimSwitch\": \"operator special\",\n      \"slimTag\": \"tag\",\n      \"slimId\": \"attribute def\",\n      \"slimClass\": \"attribute qualifier\",\n      \"slimAttribute\": \"attribute\",\n      \"slimSubmode\": \"keyword special\",\n      \"closeAttributeTag\": null,\n      \"slimDoctype\": null,\n      \"lineContinuation\": null\n    };\n    var closing = {\n      \"{\": \"}\",\n      \"[\": \"]\",\n      \"(\": \")\"\n    };\n\n    var nameStartChar = \"_a-zA-Z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\";\n    var nameChar = nameStartChar + \"\\\\-0-9\\xB7\\u0300-\\u036F\\u203F-\\u2040\";\n    var nameRegexp = new RegExp(\"^[:\"+nameStartChar+\"](?::[\"+nameChar+\"]|[\"+nameChar+\"]*)\");\n    var attributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*(?=\\\\s*=)\");\n    var wrappedAttributeNameRegexp = new RegExp(\"^[:\"+nameStartChar+\"][:\\\\.\"+nameChar+\"]*\");\n    var classNameRegexp = /^\\.-?[_a-zA-Z]+[\\w\\-]*/;\n    var classIdRegexp = /^#[_a-zA-Z]+[\\w\\-]*/;\n\n    function backup(pos, tokenize, style) {\n      var restore = function(stream, state) {\n        state.tokenize = tokenize;\n        if (stream.pos < pos) {\n          stream.pos = pos;\n          return style;\n        }\n        return state.tokenize(stream, state);\n      };\n      return function(stream, state) {\n        state.tokenize = restore;\n        return tokenize(stream, state);\n      };\n    }\n\n    function maybeBackup(stream, state, pat, offset, style) {\n      var cur = stream.current();\n      var idx = cur.search(pat);\n      if (idx > -1) {\n        state.tokenize = backup(stream.pos, state.tokenize, style);\n        stream.backUp(cur.length - idx - offset);\n      }\n      return style;\n    }\n\n    function continueLine(state, column) {\n      state.stack = {\n        parent: state.stack,\n        style: \"continuation\",\n        indented: column,\n        tokenize: state.line\n      };\n      state.line = state.tokenize;\n    }\n    function finishContinue(state) {\n      if (state.line == state.tokenize) {\n        state.line = state.stack.tokenize;\n        state.stack = state.stack.parent;\n      }\n    }\n\n    function lineContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        if (stream.match(/^\\\\$/)) {\n          continueLine(state, column);\n          return \"lineContinuation\";\n        }\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/(?:^|[^\\\\])(?:\\\\\\\\)*\\\\$/)) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function commaContinuable(column, tokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var style = tokenize(stream, state);\n        if (stream.eol() && stream.current().match(/,$/)) {\n          continueLine(state, column);\n        }\n        return style;\n      };\n    }\n\n    function rubyInQuote(endQuote, tokenize) {\n      // TODO: add multi line support\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = tokenize;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n    function startRubySplat(tokenize) {\n      var rubyState;\n      var runSplat = function(stream, state) {\n        if (state.rubyState.tokenize.length == 1 && !state.rubyState.context.prev) {\n          stream.backUp(1);\n          if (stream.eatSpace()) {\n            state.rubyState = rubyState;\n            state.tokenize = tokenize;\n            return tokenize(stream, state);\n          }\n          stream.next();\n        }\n        return ruby(stream, state);\n      };\n      return function(stream, state) {\n        rubyState = state.rubyState;\n        state.rubyState = CodeMirror.startState(rubyMode);\n        state.tokenize = runSplat;\n        return ruby(stream, state);\n      };\n    }\n\n    function ruby(stream, state) {\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function htmlLine(stream, state) {\n      if (stream.match(/^\\\\$/)) {\n        return \"lineContinuation\";\n      }\n      return html(stream, state);\n    }\n    function html(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      return maybeBackup(stream, state, /[^\\\\]#\\{/, 1, htmlMode.token(stream, state.htmlState));\n    }\n\n    function startHtmlLine(lastTokenize) {\n      return function(stream, state) {\n        var style = htmlLine(stream, state);\n        if (stream.eol()) state.tokenize = lastTokenize;\n        return style;\n      };\n    }\n\n    function startHtmlMode(stream, state, offset) {\n      state.stack = {\n        parent: state.stack,\n        style: \"html\",\n        indented: stream.column() + offset, // pipe + space\n        tokenize: state.line\n      };\n      state.line = state.tokenize = html;\n      return null;\n    }\n\n    function comment(stream, state) {\n      stream.skipToEnd();\n      return state.stack.style;\n    }\n\n    function commentMode(stream, state) {\n      state.stack = {\n        parent: state.stack,\n        style: \"comment\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = comment;\n      return comment(stream, state);\n    }\n\n    function attributeWrapper(stream, state) {\n      if (stream.eat(state.stack.endQuote)) {\n        state.line = state.stack.line;\n        state.tokenize = state.stack.tokenize;\n        state.stack = state.stack.parent;\n        return null;\n      }\n      if (stream.match(wrappedAttributeNameRegexp)) {\n        state.tokenize = attributeWrapperAssign;\n        return \"slimAttribute\";\n      }\n      stream.next();\n      return null;\n    }\n    function attributeWrapperAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = attributeWrapperValue;\n        return null;\n      }\n      return attributeWrapper(stream, state);\n    }\n    function attributeWrapperValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, attributeWrapper);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(attributeWrapper)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = attributeWrapper;\n        return \"keyword\";\n      }\n      return startRubySplat(attributeWrapper)(stream, state);\n    }\n\n    function startAttributeWrapperMode(state, endQuote, tokenize) {\n      state.stack = {\n        parent: state.stack,\n        style: \"wrapper\",\n        indented: state.indented + 1,\n        tokenize: tokenize,\n        line: state.line,\n        endQuote: endQuote\n      };\n      state.line = state.tokenize = attributeWrapper;\n      return null;\n    }\n\n    function sub(stream, state) {\n      if (stream.match(/^#\\{/)) {\n        state.tokenize = rubyInQuote(\"}\", state.tokenize);\n        return null;\n      }\n      var subStream = new CodeMirror.StringStream(stream.string.slice(state.stack.indented), stream.tabSize);\n      subStream.pos = stream.pos - state.stack.indented;\n      subStream.start = stream.start - state.stack.indented;\n      subStream.lastColumnPos = stream.lastColumnPos - state.stack.indented;\n      subStream.lastColumnValue = stream.lastColumnValue - state.stack.indented;\n      var style = state.subMode.token(subStream, state.subState);\n      stream.pos = subStream.pos + state.stack.indented;\n      return style;\n    }\n    function firstSub(stream, state) {\n      state.stack.indented = stream.column();\n      state.line = state.tokenize = sub;\n      return state.tokenize(stream, state);\n    }\n\n    function createMode(mode) {\n      var query = embedded[mode];\n      var spec = CodeMirror.mimeModes[query];\n      if (spec) {\n        return CodeMirror.getMode(config, spec);\n      }\n      var factory = CodeMirror.modes[query];\n      if (factory) {\n        return factory(config, {name: query});\n      }\n      return CodeMirror.getMode(config, \"null\");\n    }\n\n    function getMode(mode) {\n      if (!modes.hasOwnProperty(mode)) {\n        return modes[mode] = createMode(mode);\n      }\n      return modes[mode];\n    }\n\n    function startSubMode(mode, state) {\n      var subMode = getMode(mode);\n      var subState = CodeMirror.startState(subMode);\n\n      state.subMode = subMode;\n      state.subState = subState;\n\n      state.stack = {\n        parent: state.stack,\n        style: \"sub\",\n        indented: state.indented + 1,\n        tokenize: state.line\n      };\n      state.line = state.tokenize = firstSub;\n      return \"slimSubmode\";\n    }\n\n    function doctypeLine(stream, _state) {\n      stream.skipToEnd();\n      return \"slimDoctype\";\n    }\n\n    function startLine(stream, state) {\n      var ch = stream.peek();\n      if (ch == '<') {\n        return (state.tokenize = startHtmlLine(state.tokenize))(stream, state);\n      }\n      if (stream.match(/^[|']/)) {\n        return startHtmlMode(stream, state, 1);\n      }\n      if (stream.match(/^\\/(!|\\[\\w+])?/)) {\n        return commentMode(stream, state);\n      }\n      if (stream.match(/^(-|==?[<>]?)/)) {\n        state.tokenize = lineContinuable(stream.column(), commaContinuable(stream.column(), ruby));\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^doctype\\b/)) {\n        state.tokenize = doctypeLine;\n        return \"keyword\";\n      }\n\n      var m = stream.match(embeddedRegexp);\n      if (m) {\n        return startSubMode(m[1], state);\n      }\n\n      return slimTag(stream, state);\n    }\n\n    function slim(stream, state) {\n      if (state.startOfLine) {\n        return startLine(stream, state);\n      }\n      return slimTag(stream, state);\n    }\n\n    function slimTag(stream, state) {\n      if (stream.eat('*')) {\n        state.tokenize = startRubySplat(slimTagExtras);\n        return null;\n      }\n      if (stream.match(nameRegexp)) {\n        state.tokenize = slimTagExtras;\n        return \"slimTag\";\n      }\n      return slimClass(stream, state);\n    }\n    function slimTagExtras(stream, state) {\n      if (stream.match(/^(<>?|><?)/)) {\n        state.tokenize = slimClass;\n        return null;\n      }\n      return slimClass(stream, state);\n    }\n    function slimClass(stream, state) {\n      if (stream.match(classIdRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimId\";\n      }\n      if (stream.match(classNameRegexp)) {\n        state.tokenize = slimClass;\n        return \"slimClass\";\n      }\n      return slimAttribute(stream, state);\n    }\n    function slimAttribute(stream, state) {\n      if (stream.match(/^([\\[\\{\\(])/)) {\n        return startAttributeWrapperMode(state, closing[RegExp.$1], slimAttribute);\n      }\n      if (stream.match(attributeNameRegexp)) {\n        state.tokenize = slimAttributeAssign;\n        return \"slimAttribute\";\n      }\n      if (stream.peek() == '*') {\n        stream.next();\n        state.tokenize = startRubySplat(slimContent);\n        return null;\n      }\n      return slimContent(stream, state);\n    }\n    function slimAttributeAssign(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = slimAttributeValue;\n        return null;\n      }\n      // should never happen, because of forward lookup\n      return slimAttribute(stream, state);\n    }\n\n    function slimAttributeValue(stream, state) {\n      var ch = stream.peek();\n      if (ch == '\"' || ch == \"\\'\") {\n        state.tokenize = readQuoted(ch, \"string\", true, false, slimAttribute);\n        stream.next();\n        return state.tokenize(stream, state);\n      }\n      if (ch == '[') {\n        return startRubySplat(slimAttribute)(stream, state);\n      }\n      if (ch == ':') {\n        return startRubySplat(slimAttributeSymbols)(stream, state);\n      }\n      if (stream.match(/^(true|false|nil)\\b/)) {\n        state.tokenize = slimAttribute;\n        return \"keyword\";\n      }\n      return startRubySplat(slimAttribute)(stream, state);\n    }\n    function slimAttributeSymbols(stream, state) {\n      stream.backUp(1);\n      if (stream.match(/^[^\\s],(?=:)/)) {\n        state.tokenize = startRubySplat(slimAttributeSymbols);\n        return null;\n      }\n      stream.next();\n      return slimAttribute(stream, state);\n    }\n    function readQuoted(quote, style, embed, unescaped, nextTokenize) {\n      return function(stream, state) {\n        finishContinue(state);\n        var fresh = stream.current().length == 0;\n        if (stream.match(/^\\\\$/, fresh)) {\n          if (!fresh) return style;\n          continueLine(state, state.indented);\n          return \"lineContinuation\";\n        }\n        if (stream.match(/^#\\{/, fresh)) {\n          if (!fresh) return style;\n          state.tokenize = rubyInQuote(\"}\", state.tokenize);\n          return null;\n        }\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize = nextTokenize;\n            break;\n          }\n          if (embed && ch == \"#\" && !escaped) {\n            if (stream.eat(\"{\")) {\n              stream.backUp(2);\n              break;\n            }\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (stream.eol() && escaped) {\n          stream.backUp(1);\n        }\n        return style;\n      };\n    }\n    function slimContent(stream, state) {\n      if (stream.match(/^==?/)) {\n        state.tokenize = ruby;\n        return \"slimSwitch\";\n      }\n      if (stream.match(/^\\/$/)) { // tag close hint\n        state.tokenize = slim;\n        return null;\n      }\n      if (stream.match(/^:/)) { // inline tag\n        state.tokenize = slimTag;\n        return \"slimSwitch\";\n      }\n      startHtmlMode(stream, state, 0);\n      return state.tokenize(stream, state);\n    }\n\n    var mode = {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          stack: null,\n          last: null,\n          tokenize: slim,\n          line: slim,\n          indented: 0\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          subMode: state.subMode,\n          subState: state.subMode && CodeMirror.copyState(state.subMode, state.subState),\n          stack: state.stack,\n          last: state.last,\n          tokenize: state.tokenize,\n          line: state.line\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          state.tokenize = state.line;\n          while (state.stack && state.stack.indented > state.indented && state.last != \"slimSubmode\") {\n            state.line = state.tokenize = state.stack.tokenize;\n            state.stack = state.stack.parent;\n            state.subMode = null;\n            state.subState = null;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        if (style) state.last = style;\n        return styleMap.hasOwnProperty(style) ? styleMap[style] : style;\n      },\n\n      blankLine: function(state) {\n        if (state.subMode && state.subMode.blankLine) {\n          return state.subMode.blankLine(state.subState);\n        }\n      },\n\n      innerMode: function(state) {\n        if (state.subMode) return {state: state.subState, mode: state.subMode};\n        return {state: state, mode: mode};\n      }\n\n      //indent: function(state) {\n      //  return state.indented;\n      //}\n    };\n    return mode;\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-slim\", \"slim\");\n  CodeMirror.defineMIME(\"application/x-slim\", \"slim\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}