{"version":3,"sources":["../node_modules/codemirror/mode/ruby/ruby.js","../node_modules/codemirror/mode/haml/haml.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","wordObj","words","o","i","e","length","keywordList","keywords","indentWords","dedentWords","opening","closing","defineMode","config","curPunc","chain","newtok","stream","state","tokenize","push","tokenBase","sol","match","eol","readBlockComment","eatSpace","m","ch","next","readQuoted","regexpAhead","style","embed","eat","delim","propertyIsEnumerable","skipToEnd","readHereDoc","eatWhile","test","varList","lastTok","more","start","pos","depth","found","escaped","indexOf","backUp","tokenBaseUntilBrace","peek","pop","tokenBaseOnce","alreadyCalled","quote","unescaped","context","type","prev","phrase","mayIndent","startState","indented","indentUnit","continuedLine","token","indentation","kwtype","thisTok","word","current","column","indent","textAfter","Pass","firstChar","charAt","ct","closed","electricInput","lineComment","fold","defineMIME","registerHelper","mod","require","htmlMode","getMode","name","rubyMode","rubyInQuote","endQuote","rubyState","html","ruby","previousToken","startOfLine","htmlState","copyState","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","defaults","prop","inText","parser","inBlock","doctype","inTag","baseState","tagName","tagStart","inAttribute","stringStartCol","closure","isInAttribute","terminator","Context","this","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","maybeBackup","pat","cur","search","attrRegexpCache","getAttrRegexp","attr","regexp","RegExp","getAttrValue","text","getTagRegexp","anchored","addTags","from","to","tag","dest","source","unshift","findMatchingMode","tagInfo","tagText","spec","parserConfig","tags","configTags","configScript","scriptTypes","matches","mode","toLowerCase","modeSpec","endTagA","endTag","localState","localMode","local","line","innerMode"],"mappings":"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","file":"static/js/14.be48d7ac.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction wordObj(words) {\n  var o = {};\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n  return o;\n}\n\nvar keywordList = [\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\n], keywords = wordObj(keywordList);\n\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\", \"then\",\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\nvar dedentWords = wordObj([\"end\", \"until\"]);\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\n\nCodeMirror.defineMode(\"ruby\", function(config) {\n  var curPunc;\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\n      state.tokenize.push(readBlockComment);\n      return \"comment\";\n    }\n    if (stream.eatSpace()) return null;\n    var ch = stream.next(), m;\n    if (ch == \"`\" || ch == \"'\" || ch == '\"') {\n      return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\n    } else if (ch == \"/\") {\n      if (regexpAhead(stream))\n        return chain(readQuoted(ch, \"string-2\", true), stream, state);\n      else\n        return \"operator\";\n    } else if (ch == \"%\") {\n      var style = \"string\", embed = true;\n      if (stream.eat(\"s\")) style = \"atom\";\n      else if (stream.eat(/[WQ]/)) style = \"string\";\n      else if (stream.eat(/[r]/)) style = \"string-2\";\n      else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\n      var delim = stream.eat(/[^\\w\\s=]/);\n      if (!delim) return \"operator\";\n      if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\n      return chain(readQuoted(delim, style, embed, true), stream, state);\n    } else if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\n      return chain(readHereDoc(m[2], m[1]), stream, state);\n    } else if (ch == \"0\") {\n      if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\n      else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\n      else stream.eatWhile(/[0-7]/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\n      return \"number\";\n    } else if (ch == \"?\") {\n      while (stream.match(/^\\\\[CM]-/)) {}\n      if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\n      else stream.next();\n      return \"string\";\n    } else if (ch == \":\") {\n      if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\n      if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\n\n      // :> :>> :< :<< are valid symbols\n      if (stream.eat(/[\\<\\>]/)) {\n        stream.eat(/[\\<\\>]/);\n        return \"atom\";\n      }\n\n      // :+ :- :/ :* :| :& :! are valid symbols\n      if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\n        return \"atom\";\n      }\n\n      // Symbols can't start by a digit\n      if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\n        stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\n        // Only one ? ! = is allowed and only as the last character\n        stream.eat(/[\\?\\!\\=]/);\n        return \"atom\";\n      }\n      return \"operator\";\n    } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\n      stream.eat(\"@\");\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      return \"variable-2\";\n    } else if (ch == \"$\") {\n      if (stream.eat(/[a-zA-Z_]/)) {\n        stream.eatWhile(/[\\w]/);\n      } else if (stream.eat(/\\d/)) {\n        stream.eat(/\\d/);\n      } else {\n        stream.next(); // Must be a special global like $: or $!\n      }\n      return \"variable-3\";\n    } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      stream.eat(/[\\?\\!]/);\n      if (stream.eat(\":\")) return \"atom\";\n      return \"ident\";\n    } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\n      curPunc = \"|\";\n      return null;\n    } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    } else if (ch == \"-\" && stream.eat(\">\")) {\n      return \"arrow\";\n    } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\n      var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\n      if (ch == \".\" && !more) curPunc = \".\";\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function regexpAhead(stream) {\n    var start = stream.pos, depth = 0, next, found = false, escaped = false\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (\"[{(\".indexOf(next) > -1) {\n          depth++\n        } else if (\"]})\".indexOf(next) > -1) {\n          depth--\n          if (depth < 0) break\n        } else if (next == \"/\" && depth == 0) {\n          found = true\n          break\n        }\n        escaped = next == \"\\\\\"\n      } else {\n        escaped = false\n      }\n    }\n    stream.backUp(stream.pos - start)\n    return found\n  }\n\n  function tokenBaseUntilBrace(depth) {\n    if (!depth) depth = 1;\n    return function(stream, state) {\n      if (stream.peek() == \"}\") {\n        if (depth == 1) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        } else {\n          state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\n        }\n      } else if (stream.peek() == \"{\") {\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\n      }\n      return tokenBase(stream, state);\n    };\n  }\n  function tokenBaseOnce() {\n    var alreadyCalled = false;\n    return function(stream, state) {\n      if (alreadyCalled) {\n        state.tokenize.pop();\n        return state.tokenize[state.tokenize.length-1](stream, state);\n      }\n      alreadyCalled = true;\n      return tokenBase(stream, state);\n    };\n  }\n  function readQuoted(quote, style, embed, unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n\n      if (state.context.type === 'read-quoted-paused') {\n        state.context = state.context.prev;\n        stream.eat(\"}\");\n      }\n\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        if (embed && ch == \"#\" && !escaped) {\n          if (stream.eat(\"{\")) {\n            if (quote == \"}\") {\n              state.context = {prev: state.context, type: 'read-quoted-paused'};\n            }\n            state.tokenize.push(tokenBaseUntilBrace());\n            break;\n          } else if (/[@\\$]/.test(stream.peek())) {\n            state.tokenize.push(tokenBaseOnce());\n            break;\n          }\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return style;\n    };\n  }\n  function readHereDoc(phrase, mayIndent) {\n    return function(stream, state) {\n      if (mayIndent) stream.eatSpace()\n      if (stream.match(phrase)) state.tokenize.pop();\n      else stream.skipToEnd();\n      return \"string\";\n    };\n  }\n  function readBlockComment(stream, state) {\n    if (stream.sol() && stream.match(\"=end\") && stream.eol())\n      state.tokenize.pop();\n    stream.skipToEnd();\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase],\n              indented: 0,\n              context: {type: \"top\", indented: -config.indentUnit},\n              continuedLine: false,\n              lastTok: null,\n              varList: false};\n    },\n\n    token: function(stream, state) {\n      curPunc = null;\n      if (stream.sol()) state.indented = stream.indentation();\n      var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\n      var thisTok = curPunc;\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = state.lastTok == \".\" ? \"property\"\n          : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : /^[A-Z]/.test(word) ? \"tag\"\n          : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\n          : \"variable\";\n        if (style == \"keyword\") {\n          thisTok = word;\n          if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\n          else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\n          else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\n            kwtype = \"indent\";\n          else if (word == \"do\" && state.context.indented < state.indented)\n            kwtype = \"indent\";\n        }\n      }\n      if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\n      if (curPunc == \"|\") state.varList = !state.varList;\n\n      if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\n        state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\n      else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\n        state.context = state.context.prev;\n\n      if (stream.eol())\n        state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize[state.tokenize.length-1] != tokenBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0);\n      var ct = state.context;\n      var closed = ct.type == closing[firstChar] ||\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\n      return ct.indented + (closed ? 0 : config.indentUnit) +\n        (state.continuedLine ? config.indentUnit : 0);\n    },\n\n    electricInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\n    lineComment: \"#\",\n    fold: \"indent\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-ruby\", \"ruby\");\n\nCodeMirror.registerHelper(\"hintWords\", \"ruby\", keywordList);\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../ruby/ruby\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../ruby/ruby\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\n  // full haml mode. This handled embedded ruby and html fragments too\n  CodeMirror.defineMode(\"haml\", function(config) {\n    var htmlMode = CodeMirror.getMode(config, {name: \"htmlmixed\"});\n    var rubyMode = CodeMirror.getMode(config, \"ruby\");\n\n    function rubyInQuote(endQuote) {\n      return function(stream, state) {\n        var ch = stream.peek();\n        if (ch == endQuote && state.rubyState.tokenize.length == 1) {\n          // step out of ruby context as it seems to complete processing all the braces\n          stream.next();\n          state.tokenize = html;\n          return \"closeAttributeTag\";\n        } else {\n          return ruby(stream, state);\n        }\n      };\n    }\n\n    function ruby(stream, state) {\n      if (stream.match(\"-#\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      return rubyMode.token(stream, state.rubyState);\n    }\n\n    function html(stream, state) {\n      var ch = stream.peek();\n\n      // handle haml declarations. All declarations that cant be handled here\n      // will be passed to html mode\n      if (state.previousToken.style == \"comment\" ) {\n        if (state.indented > state.previousToken.indented) {\n          stream.skipToEnd();\n          return \"commentLine\";\n        }\n      }\n\n      if (state.startOfLine) {\n        if (ch == \"!\" && stream.match(\"!!\")) {\n          stream.skipToEnd();\n          return \"tag\";\n        } else if (stream.match(/^%[\\w:#\\.]+=/)) {\n          state.tokenize = ruby;\n          return \"hamlTag\";\n        } else if (stream.match(/^%[\\w:]+/)) {\n          return \"hamlTag\";\n        } else if (ch == \"/\" ) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (state.startOfLine || state.previousToken.style == \"hamlTag\") {\n        if ( ch == \"#\" || ch == \".\") {\n          stream.match(/[\\w-#\\.]*/);\n          return \"hamlAttribute\";\n        }\n      }\n\n      // do not handle --> as valid ruby, make it HTML close comment instead\n      if (state.startOfLine && !stream.match(\"-->\", false) && (ch == \"=\" || ch == \"-\" )) {\n        state.tokenize = ruby;\n        return state.tokenize(stream, state);\n      }\n\n      if (state.previousToken.style == \"hamlTag\" ||\n          state.previousToken.style == \"closeAttributeTag\" ||\n          state.previousToken.style == \"hamlAttribute\") {\n        if (ch == \"(\") {\n          state.tokenize = rubyInQuote(\")\");\n          return state.tokenize(stream, state);\n        } else if (ch == \"{\") {\n          if (!stream.match(/^\\{%.*/)) {\n            state.tokenize = rubyInQuote(\"}\");\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n\n      return htmlMode.token(stream, state.htmlState);\n    }\n\n    return {\n      // default to html mode\n      startState: function() {\n        var htmlState = CodeMirror.startState(htmlMode);\n        var rubyState = CodeMirror.startState(rubyMode);\n        return {\n          htmlState: htmlState,\n          rubyState: rubyState,\n          indented: 0,\n          previousToken: { style: null, indented: 0},\n          tokenize: html\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          htmlState : CodeMirror.copyState(htmlMode, state.htmlState),\n          rubyState: CodeMirror.copyState(rubyMode, state.rubyState),\n          indented: state.indented,\n          previousToken: state.previousToken,\n          tokenize: state.tokenize\n        };\n      },\n\n      token: function(stream, state) {\n        if (stream.sol()) {\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        state.startOfLine = false;\n        // dont record comment line as we only want to measure comment line with\n        // the opening comment block\n        if (style && style != \"commentLine\") {\n          state.previousToken = { style: style, indented: state.indented };\n        }\n        // if current state is ruby and the previous token is not `,` reset the\n        // tokenize to html\n        if (stream.eol() && state.tokenize == ruby) {\n          stream.backUp(1);\n          var ch = stream.peek();\n          stream.next();\n          if (ch && ch != \",\") {\n            state.tokenize = html;\n          }\n        }\n        // reprocess some of the specific style tag when finish setting previousToken\n        if (style == \"hamlTag\") {\n          style = \"tag\";\n        } else if (style == \"commentLine\") {\n          style = \"comment\";\n        } else if (style == \"hamlAttribute\") {\n          style = \"attribute\";\n        } else if (style == \"closeAttributeTag\") {\n          style = null;\n        }\n        return style;\n      }\n    };\n  }, \"htmlmixed\", \"ruby\");\n\n  CodeMirror.defineMIME(\"text/x-haml\", \"haml\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag,\n      allowMissingTagName: parserConfig.allowMissingTagName,\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}